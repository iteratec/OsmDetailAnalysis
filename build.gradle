buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2"
        classpath "org.grails.plugins:hibernate4:5.0.5"
        classpath 'com.moowork.gradle:gradle-node-plugin:0.13'
        classpath 'com.bertramlabs.plugins:less-asset-pipeline:2.9.4'
    }
}

version "0.1"
group "osmdetailanalysis"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "war"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"
apply plugin: 'com.moowork.node'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile 'org.grails.plugins:mongodb:5.0.7'
    compile 'org.grails.plugins:joda-time:2.0.0'
    compile 'org.grails.plugins:http-builder-helper:1.0.2'
    compile 'xml-apis:xml-apis:1.4.01'
    runtime 'org.grails.plugins:grails-console:2.0.5'
    console "org.grails:grails-console"
    profile "org.grails.profiles:web:3.1.6"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.8.2"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    compile 'com.bertramlabs.plugins:less-asset-pipeline:2.9.4'
    assets 'com.bertramlabs.plugins:less-asset-pipeline:2.9.4'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
    configOptions = [:]
    includes = ['bootstrap-custom.less']
    excludes = ['**/*.less']
}

node {
    //node version to use
    version = '6.2.2'
    //npm version to use
    npmVersion = '3.10.3'
    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")
    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}/node_modules")
}

npmInstall {
    outputs.files file('node_modules')
}

task bowerInstall(type: NodeTask) {
    script = file('node_modules/bower/bin/bower')
    args = ["--config.storage.cache=${gradle.getGradleUserHomeDir()}/caches/bower/cache",
            "--config.storage.packages=${gradle.getGradleUserHomeDir()}/caches/bower/packages",
            "--config.storage.registry=${gradle.getGradleUserHomeDir()}/caches/bower/registry",
            'install']
    inputs.files file('bower.json')
    outputs.files file('bower_components')
    dependsOn npmInstall
}

task bowerSyncJavascript(type: Sync) {
    from 'bower_components'
    into "grails-app/assets/javascripts/bower_components"
    include 'crossfilter/crossfilter.min.js'
    include 'dcjs/dc.min.js'
    include 'd3/d3.min.js'
    include 'jquery/jquery.min.js'
    include 'jquery-ui/ui/jquery-ui.js'
    include 'bootstrap/docs/assets/js/bootstrap.min.js'
    include 'bootstrap/js/*.js'
    include 'bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js'
    dependsOn bowerInstall
}

task bowerSyncStylesheets(type: Sync) {
    from 'bower_components'
    into "grails-app/assets/stylesheets/bower_components"
    include 'dcjs/dc.css'
    include 'bootstrap/docs/assets/css/bootstrap*.css'
    include 'bootstrap/less/*.less'
    include 'bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css'
    include 'components-font-awesome/css/font-awesome.min.css'
    include 'components-font-awesome/fonts/*'
    dependsOn bowerInstall
}

task bowerPackages() {
    dependsOn bowerSyncJavascript, bowerSyncStylesheets
}

processResources.dependsOn bowerPackages
assetCompile.dependsOn bowerPackages

clean.delete << file('grails-app/assets/javascripts/bower_components')
clean.delete << file('grails-app/assets/stylesheets/bower_components')
clean.delete << file('node_modules')
clean.delete << file('bower_components')